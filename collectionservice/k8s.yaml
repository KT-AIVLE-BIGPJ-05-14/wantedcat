# 1) 환경변수 Secret (민감정보)
apiVersion: v1
kind: Secret
metadata:
  name: collectionservice-env
  namespace: default
type: Opaque
stringData:
  AZURE_STORAGE_CONNECTION_STRING: ""
  API_KEY: ""
  DB_USER: ""
  DB_PASSWORD: ""
  DB_NAME: ""
  # 도커에서 쓰던 'db'가 아님! 쿠버네티스 MySQL 서비스 이름을 넣어야 함
  DB_HOST: ""

---
# 2) Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: collectionservice
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: collectionservice
  template:
    metadata:
      labels:
        app: collectionservice
    spec:
      containers:
        - name: collectionservice
          image: jaekyung959/bjcollectionservice:v1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          envFrom:
            - secretRef:
                name: collectionservice-env
          env:
            - name: TZ
              value: "Asia/Seoul"
          # (선택) 헬스체크. /health 같은 엔드포인트가 없다면 TCP로 간단히 확인
          # readinessProbe:
          #   tcpSocket:
          #     port: 8000
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          #   timeoutSeconds: 2
          #   failureThreshold: 6
          # livenessProbe:
          #   tcpSocket:
          #     port: 8000
          #   initialDelaySeconds: 20
          #   periodSeconds: 20
          #   timeoutSeconds: 2
          #   failureThreshold: 6
          # resources:
          #   requests:
          #     cpu: "100m"
          #     memory: "256Mi"
          #   limits:
          #     cpu: "500m"
          #     memory: "512Mi"

---
# 3) Service: 다른 파드가 http://collectionservice:8000 으로 접근
apiVersion: v1
kind: Service
metadata:
  name: collectionservice
  namespace: default
spec:
  selector:
    app: collectionservice
  ports:
    - name: http
      port: 8000       # 클러스터 내부에서 보이는 포트
      targetPort: 8000 # 컨테이너 포트
  type: ClusterIP      # 내부 통신만 필요하므로 ClusterIP면 충분
